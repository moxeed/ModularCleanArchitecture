// <auto-generated />
using System;
using Charity.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Charity.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201006081652_DatabaseRelationFixed")]
    partial class DatabaseRelationFixed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Charity.Domain.Entities.Core.Philanthropist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharityActivitiesHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("StudyField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyUniversity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Philanthropists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharityActivitiesHistory = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Risus ultricies tristique nulla aliquet enim tortor. Vel risus commodo viverra maecenas accumsan lacus. Duis ultricies lacus sed turpis tincidunt id aliquet. Felis donec et odio pellentesque diam volutpat commodo sed egestas. Sem integer vitae justo eget magna fermentum iaculis eu. Eget arcu dictum varius duis. Arcu dui vivamus arcu felis bibendum. Placerat duis ultricies lacus sed turpis tincidunt id. Elit sed vulputate mi sit amet mauris commodo quis imperdiet. Non blandit massa enim nec dui nunc mattis. Nibh cras pulvinar mattis nunc sed blandit libero volutpat sed. Turpis cursus in hac habitasse platea dictumst.",
                            CityId = 1,
                            Created = new DateTime(2020, 10, 6, 11, 46, 52, 334, DateTimeKind.Local).AddTicks(4590),
                            Email = "p1@gmail.com",
                            FavoriteField = "School",
                            FirstName = "john",
                            ImageId = 1,
                            LastName = "due",
                            NationalCode = "0021122334",
                            Occupation = "Teacher",
                            OccupationAddress = "Street St.",
                            PhoneNumber = "093728371",
                            Sex = true,
                            StudyField = "Computer",
                            StudyGrade = "advance",
                            StudyUniversity = "UT",
                            Tel = "829327832"
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Risus ultricies tristique nulla aliquet enim tortor. Vel risus commodo viverra maecenas accumsan lacus. Duis ultricies lacus sed turpis tincidunt id aliquet. Felis donec et odio pellentesque diam volutpat commodo sed egestas. Sem integer vitae justo eget magna fermentum iaculis eu. Eget arcu dictum varius duis. Arcu dui vivamus arcu felis bibendum. Placerat duis ultricies lacus sed turpis tincidunt id. Elit sed vulputate mi sit amet mauris commodo quis imperdiet. Non blandit massa enim nec dui nunc mattis. Nibh cras pulvinar mattis nunc sed blandit libero volutpat sed. Turpis cursus in hac habitasse platea dictumst.",
                            Created = new DateTime(2020, 10, 6, 11, 46, 52, 333, DateTimeKind.Local).AddTicks(8275),
                            Summary = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut",
                            Title = "PostTitle"
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Fund")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhilanthropistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SurfaceArea")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PhilanthropistId");

                    b.HasIndex("TypeId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualEndDate = new DateTime(2020, 10, 6, 11, 46, 52, 334, DateTimeKind.Local).AddTicks(8852),
                            CityId = 2,
                            Created = new DateTime(2020, 10, 6, 11, 46, 52, 335, DateTimeKind.Local).AddTicks(195),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Risus ultricies tristique nulla aliquet enim tortor.Vel risus commodo viverra maecenas accumsan lacus.Duis ultricies lacus sed turpis tincidunt id aliquet. Felis donec et odio pellentesque diam volutpat commodo sed egestas. Sem integer vitae justo eget magna fermentum iaculis eu.Eget arcu dictum varius duis.Arcu dui vivamus arcu felis bibendum. Placerat duis ultricies lacus sed turpis tincidunt id. Elit sed vulputate mi sit amet mauris commodo quis imperdiet. Non blandit massa enim nec dui nunc mattis. Nibh cras pulvinar mattis nunc sed blandit libero volutpat sed. Turpis cursus in hac habitasse platea dictumst.",
                            EstimatedEndDate = new DateTime(2020, 9, 6, 11, 46, 52, 334, DateTimeKind.Local).AddTicks(8419),
                            Fund = 1939828738L,
                            PhilanthropistId = 1,
                            StartDate = new DateTime(2019, 10, 6, 11, 46, 52, 334, DateTimeKind.Local).AddTicks(7936),
                            SurfaceArea = 2000000,
                            Title = "Project Title",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.ProjectDynamicData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectDynamicDatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "school",
                            ProjectId = 1,
                            Value = "4"
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeEnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeEnName = "School",
                            TypeName = "مدرسه"
                        },
                        new
                        {
                            Id = 2,
                            TypeEnName = "Library",
                            TypeName = "کتابخانه"
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.dbo.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "تهران",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "تبریز",
                            StateId = 2
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.dbo.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeEnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeEnName = "Image",
                            TypeName = "عکس"
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.dbo.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "تهران"
                        },
                        new
                        {
                            Id = 2,
                            Name = "تبریز"
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.dbo.UploadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TypeId");

                    b.ToTable("UploadedFiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 10, 6, 11, 46, 52, 330, DateTimeKind.Local).AddTicks(8605),
                            FileName = "defaultProgImg.png",
                            FilePath = "Images/default.png",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 10, 6, 11, 46, 52, 333, DateTimeKind.Local).AddTicks(5675),
                            FileName = "defaultProgImg.png",
                            FilePath = "Images/kanoonlogo.png",
                            PostId = 1,
                            ProjectId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2020, 10, 6, 11, 46, 52, 333, DateTimeKind.Local).AddTicks(6596),
                            FileName = "defaultProgImg.png",
                            FilePath = "Images/kanoonlogo.png",
                            PostId = 1,
                            ProjectId = 1,
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.Philanthropist", b =>
                {
                    b.HasOne("Charity.Domain.Entities.dbo.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.Project", b =>
                {
                    b.HasOne("Charity.Domain.Entities.dbo.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Charity.Domain.Entities.Core.Philanthropist", "Philanthropist")
                        .WithMany("Projects")
                        .HasForeignKey("PhilanthropistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Charity.Domain.Entities.Core.ProjectType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Charity.Domain.Entities.Core.ProjectDynamicData", b =>
                {
                    b.HasOne("Charity.Domain.Entities.Core.Project", "Project")
                        .WithMany("ExtraDataCollection")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Charity.Domain.Entities.dbo.City", b =>
                {
                    b.HasOne("Charity.Domain.Entities.dbo.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Charity.Domain.Entities.dbo.UploadedFile", b =>
                {
                    b.HasOne("Charity.Domain.Entities.Core.Post", "Post")
                        .WithMany("Files")
                        .HasForeignKey("PostId");

                    b.HasOne("Charity.Domain.Entities.Core.Project", "Project")
                        .WithMany("AttachedFiles")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Charity.Domain.Entities.dbo.FileType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
